package com.velvetvictory.controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.velvetvictory.dto.request.FoodRequest;
import com.velvetvictory.dto.response.CustomEntityResponse;
import com.velvetvictory.dto.response.EntityResponse;
import com.velvetvictory.service.FoodService;

@RestController
@RequestMapping("/food")
public class FoodController {

	@Autowired
	private FoodService foodService;
	
	@PostMapping("/saveOrUpdateFood")
	public ResponseEntity<?> saveOrUpdateFood(@RequestParam (name = "foodRequest") String FoodRequestJson, 
									@RequestParam (name = "file") MultipartFile file)
	{
		try
		{
			ObjectMapper objectMapper = new ObjectMapper();
			FoodRequest foodRequest = objectMapper.readValue(FoodRequestJson, FoodRequest.class);
			
			System.out.println("in controller try block");
			return new ResponseEntity(new EntityResponse(foodService.saveOrUpdateFood(foodRequest, file), 0), HttpStatus.OK);
		}
		catch(Exception e)
		{
			System.out.println("in controller catch block");
			return new ResponseEntity(new CustomEntityResponse(e.getMessage(), -1), HttpStatus.BAD_REQUEST);
		}
	}
	
	@GetMapping("/searchByFoodName")
	public ResponseEntity<?> searchByFoodName(@RequestParam (required = false , defaultValue = "0") Integer pageNo,
											  @RequestParam (required = false , defaultValue = "5") Integer pageSize,
											  @RequestParam (name = "name") String name
											)
	{
		try
		{
			Pageable pageable = PageRequest.of(pageNo,pageSize);
			return new ResponseEntity( new EntityResponse(foodService.searchByFoodName(name,pageable), 0), HttpStatus.OK);
		}
		catch(Exception e)
		{
			return new ResponseEntity(new CustomEntityResponse(e.getMessage(), -1), HttpStatus.BAD_REQUEST);
		}
	}
	
	@GetMapping("/getFoodById")
	public ResponseEntity<?> getFoodById(@RequestParam (name ="id") Long id)
	{
		try
		{
			return new ResponseEntity( new EntityResponse(foodService.getFoodById(id), 0), HttpStatus.OK);
		}
		catch(Exception e)
		{
			return new ResponseEntity(new CustomEntityResponse(e.getMessage(), -1), HttpStatus.BAD_REQUEST);
		}
	}
	
	@DeleteMapping("/deleteFoodByIdFromRestaurant")
	public ResponseEntity<?> deleteFoodByIdFromRestaurant(@RequestParam (name = "foodId") Long foodId,)
	{
		try
		{
			return new ResponseEntity( new EntityResponse(foodService.deleteFoodById(foodId), 0), HttpStatus.OK);
		}
		catch(Exception e)
		{
			return new ResponseEntity(new CustomEntityResponse(e.getMessage(), -1), HttpStatus.BAD_REQUEST);
		}
	}
}
